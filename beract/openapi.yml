openapi: 3.1.0
info:
  title: Активности Берлоги
  version: '0.5dev'
  description: |-
    Сервис активностей и артефактов игр Берлоги.

    ## v0.5dev

    - Добавлен [эндпоинт чтения списка идентификаторов контекстов](#operation/ContextIDsList) по фильтрам аналогичным [чтению активностей с метриками](#operation/ActivitiesMetricsList).
    - Операция чтения активностей с метриками теперь позволяет указывать фильтры контекстов без ID приложения и vice versa.

    ## v0.5

    - Добавлены административные операции импорта и чтения списка контекстов.

    ## v0.4

    - Добавлен [эндпоинт чтения списка активностей с метриками](#operation/ActivitiesMetricsList).

    ## v0.3
    - Добавлен [метод чтения баллов сгруппированных по традициям](#operation/ActivitiesScoresByTraditions).
    - Добавлен [эндпоинт чтения активности по ее ID](#operation/ActivityRead).
    - Добавлен [эндпоинт чтения ID традиции контекста](#operation/ContextTraditionID).

    ## v0.2
    [Для передачи активности](#operation/ActivitiesCreate) теперь обязательно нужно указывать версию приложения.
  contact:
    email: talent@kruzhok.org
tags:
  - name: application
    description: Операции, предназначенные для приложений
  - name: service
    description: Операции, предназначенные для сервисов
  - name: admin
    description: Операции, предназначенные для администрирования
servers:
  - url: https://talent.kruzhok.org/berloga-activities
    description: Production Server
  - url: https://talent.test.kruzhok.org/berloga-activities
    description: Development Server
paths:
  /activities:
    get:
      operationId: ActivitiesList
      summary: Список активностей
      description: Если какие-то из указанных активностей не будут найдены, то они просто будут отсутствовать в ответе.
      security: [BerlogaJWT: []]
      tags: [application]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Activity'
      parameters:
        - name: ids
          in: query
          description: Идентификаторы активностей
          required: true
          schema:
            type: array
            minItems: 1
            maxItems: 50
            items:
              type: string
              format: uuid
    post:
      operationId: ActivitiesCreate
      summary: Запись активностей
      description: |-
        Каждая из активностей опционально может иметь метрики и артефакт.

        Запись активностей доступна в коротком и расширенном форматах.

        #### Короткий формат

        Передается только массив активностей. Если они ссылаются на артефакты, эти артефакты должны быть предварительно [загружены](#operation/ArtefactsCreate). Ответ на такой запрос тоже включает в себя только массив с активностями.

        #### Расширенный формат

        В этом формате передается объект, который должен содержать активности в массиве, аналогичном короткому формату, и опционально может включать в себя еще артефакты для создания. В ответе на такой запрос, аналогично, возвращается объект, содержащий те же ключи. В возвращаемом массиве артефактов будут ссылки, по которым эти артефакты должны быть загружены.

        > Ссылки имеют ограниченный срок жизни. Если данные артефакта не были загружены в рамках этого периода, то нужно [запросить новую ссылку](#operation/ArtefactUploadURL).

        > До тех пор, пока указанные в активности артефакты не будут загружены, эта активность с ее баллами не будет учитываться в прогрессе традиции игрока.

        После загрузки данных артефакта по полученной ссылке, нужно [подтвердить что загрузка завершена](#operation/ArtefactSetUploaded).
      security: [BerlogaJWT: []]
      tags: [application]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/ActivityWriteList'
                - $ref: '#/components/schemas/ActivityWriteObject'
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ActivitiesCreateList'
                  - $ref: '#/components/schemas/ActivitiesCreateObject'
        '422':
          description: Ошибка валидации данных в запросе
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /activities/metrics:
    get:
      operationId: ActivitiesMetricsList
      summary: Список активностей с метриками
      description: |-
        Необходимо указать параметры выбора контекстов.
        Это могут быть либо идентификаторы конкретных контекстов `context_ids`.
        Либо набор фильтров `context_property` и/или ID приложения `application_id`.
      security: [ServiceKey: [], TalentOAuth: []]
      tags: [service]
      responses:
        '200':
          description: OK
          headers:
            X-Count:
              $ref: '#/components/headers/X-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - activity_id
                    - created_at
                    - player_id
                    - app_version
                    - context_id
                    - context_description
                    - artefact_id
                    - metrics
                  properties:
                    activity_id:
                      $ref: '#/components/schemas/ActivityID'
                    created_at:
                      $ref: '#/components/schemas/ActivityCreatedAt'
                    player_id:
                      $ref: '#/components/schemas/PlayerID'
                    app_version:
                      $ref: '#/components/schemas/ActivityAppVersion'
                    context_id:
                      $ref: '#/components/schemas/ContextID'
                    context_description:
                      type: string
                      description: Описание контекста
                    artefact_id:
                      allOf:
                        - $ref: '#/components/schemas/ArtefactID'
                        - nullable: true
                    metrics:
                      $ref: '#/components/schemas/ActivityMetrics'
        '403':
          description: Ошибка доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
            minumum: 0
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 100
            minumum: 1
            maximum: 1000
        - name: application_id
          in: query
          description: ID приложения для фильтрации контекстов.
          schema:
            type: string
            format: uuid
            description: Идентификатор приложения.
        - name: context_property
          in: query
          description: |-
            Свойства контекстов приложения.
            Заполняются в формате имени и значения объединенных пробелом (кодируется как `+` или `%20`).
            На каждое свойство допускается указывать до 5 значений.
            Множественные значения учитываются как `допустим любой из вариантов`,
            или же еще можно сказать что они объединяются логическим ИЛИ.
            В запросе можноственные значения нужно разделять вертикальной чертой.
            Пример фильтра по свойству `instrument` с тремя допустимыми значениями: `instrument+piano|guitar|drums`.
          schema:
            type: array
            minItems: 1
            maxItems: 3
            items:
              type: string
        - name: context_ids
          in: query
          description: Список идентификаторов контекстов.
          schema:
            type: array
            minItems: 1
            maxItems: 20
            items:
              $ref: '#/components/schemas/ContextID'
        - name: since
          in: query
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          schema:
            type: string
            format: date-time
        - name: player_ids
          in: query
          description: Список игроков, активности которых попадут в выборку.
          schema:
            type: array
            minItems: 1
            maxItems: 50
            items:
              $ref: '#/components/schemas/PlayerID'
  /activities/scores:
    get:
      operationId: ActivitiesScores
      summary: Балл за активности
      description: |-
        **Обязательно** указание либо `tradition_id`, либо `context_ids`; эти параметры взаимоисключающие.
      security: [BerlogaJWT: [], ServiceKey: []]
      tags: [application, service]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesScores'
        '403':
          description: Ошибка доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Ошибка в параметрах запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: tradition_id
          in: query
          description: Идентификатор традиции
          schema:
            type: integer
            format: int32
        - name: context_ids
          in: query
          description: Список идентификаторов контекстов
          schema:
            type: array
            minItems: 1
            maxItems: 50
            items:
              $ref: '#/components/schemas/ContextID'
        - name: player_ids
          in: query
          description: Список игроков, активности которых попадут в выборку. Параметр доступен только при использовании авторизации `ServiceKey`.
          schema:
            type: array
            minItems: 1
            maxItems: 50
            items:
              $ref: '#/components/schemas/PlayerID'
  /activities/scores/traditions:
    get:
      operationId: ActivitiesScoresByTraditions
      summary: Баллы сгруппированные по традициям
      security: [ServiceKey: []]
      tags: [service]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - tradition_id
                    - scores
                  properties:
                    tradition_id:
                      type: integer
                      format: int32
                      description: ID традиции.
                    scores:
                      $ref: '#/components/schemas/ActivitiesScores'
        '403':
          description: Ошибка доступа
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: talent_id
          in: query
          required: true
          description: Получение баллов по всем PlayerID пользователя
          schema:
            type: integer
            format: int32
  /activities/{activity_id}:
    get:
      operationId: ActivityRead
      summary: Чтение активности
      security: []
      tags: [service]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Activity'
                  - type: object
                    required:
                      - application_id
                      - tradition_id
                      - context_properties
                      - metrics
                    properties:
                      application_id:
                        type: string
                        format: uuid
                        description: Идентификатор приложения.
                      tradition_id:
                        type: integer
                        format: int32
                        description: ID традиции.
                      context_properties:
                        type: object
                        description: Свойства контекста активности.
                        additionalProperties:
                          type: object
                          required:
                            - value_string
                            - value_number
                          properties:
                            value_string:
                              type: string
                              nullable: true
                            value_number:
                              type: number
                              format: float64
                              nullable: true
                      metrics:
                        $ref: '#/components/schemas/ActivityMetrics'
        '404':
          description: Активность не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: activity_id
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ActivityID'
  /artefacts:
    post:
      operationId: ArtefactsCreate
      summary: Загрузка артефакта
      description: Артефакт предварительно загружается для передачи его в активности.
      security: [BerlogaJWT: []]
      tags: [application]
      requestBody:
        description: |-
          Содержимое артефакта. Поддерживаемые типы:

            - application/cyberiada-graphml
            - application/json
            - application/xml
        required: true
        content:
          application/*:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: uuid
                description: ID артефакта.
        '422':
          description: Не найден указанный тип артефакта
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      parameters:
        - name: X-Artefact-Type
          in: header
          required: true
          description: ID типа артефакта из [справочника](#operation/ArtefactTypesList).
          schema:
            type: integer
            format: int32
        - name: X-Checksum
          in: header
          required: true
          description: SHA-1 контрольная сумма
          schema:
            type: string
  /artefacts/{artefact_id}/upload-url:
    get:
      operationId: ArtefactUploadURL
      summary: Запрос новой ссылки для загрузки
      description: Ссылка для загрузки данных артефактом имеет ограниченный срок жизни. После его завершения, если данные артефакта еще не были успешно загружены, нужно запрашивать новую ссылку. Загрузку данных по ссылке нужно выполнять методом PUT.
      security: [BerlogaJWT: []]
      tags: [application]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
                format: url
        '404':
          description: Артефакт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Данные артефакта уже загружены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: artefact_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtefactID'
  /artefacts/{artefact_id}/set-uploaded:
    post:
      operationId: ArtefactSetUploaded
      summary: Подтверждение загрузки артефакта
      security: [BerlogaJWT: []]
      tags: [application]
      responses:
        '200':
          description: OK
        '404':
          description: Артефакт не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '422':
          description: Данные артефакта уже загружены
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: artefact_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtefactID'
  /artefact-types:
    get:
      operationId: ArtefactTypesList
      summary: Справочник типов артефактов
      tags: [application]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - id
                    - name
                  properties:
                    id:
                      type: integer
                      format: int32
                      description: Идентификатор типа артефактов.
                    name:
                      type: string
                      description: Название типа артефактов.
  /contexts:
    get:
      operationId: ContextsList
      summary: Список контекстов
      security: [TalentOAuth: []]
      tags: [admin]
      responses:
        '200':
          description: OK
          headers:
            X-Count:
              $ref: '#/components/headers/X-Count'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Context'
        '403':
          $ref: '#/components/responses/Error'
          description: Пользователь не является администратором сервиса
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
            default: 0
            minumum: 0
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
            default: 20
            minumum: 1
            maximum: 100
        - name: id
          in: query
          description: Фильтрация по ID контекстов.
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: t_id
          in: query
          description: Фильтрация по ID традиций.
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: app_id
          in: query
          description: Фильтрация по ID приложения.
          schema:
            type: array
            items:
              type: string
              format: uuid
        - name: desc
          in: query
          description: Фильтрация по вхождению подстроки в описание контекста.
          schema:
            type: string
  /contexts/id:
    get:
      operationId: ContextIDsList
      summary: Список идентификаторов контекстов
      description: |-
        Идентификаторы контекстов выбранные по тому же принципу что и в ActivitiesMetricsList.
        Обязательно указание либо `application_id`, либо `property`. Допускаются оба параметра.
      security: [TalentOAuth: []]
      tags: [admin]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContextID'
        '403':
          $ref: '#/components/responses/Error'
          description: Пользователь не является администратором сервиса
      parameters:
        - name: application_id
          in: query
          description: Фильтрация по ID приложения.
          schema:
            type: string
            format: uuid
        - name: property
          in: query
          description: |-
            Фильтрация контекстов по свойствам.

            Свойство и его значение разделяются пробелом (`+` или `%20`).
            В качестве значения допускается указание до пяти вариантов разделенных символом `|`.
          schema:
            type: array
            minItems: 1
            maxItems: 5
            items:
              type: string
              description: |-
                Фильтр по свойству.

                Пример: `instrument+piano|guitar|drums`.
  /contexts/import:
    post:
      operationId: ContextsImport
      summary: Импорт контекстов со свойствами
      description: |-
        Импортируемая таблица должна содержать колонки `id` и `description`.
        Содержащие в ячейках идентификатор (UUID) и описание контекста соответственно.

        Оставшиеся колонки таблицы будут восприняты как свойства контекстов.
        Тип значения для свойства определяется на основе значений в ячейках колонки.
        Если все значения можно интерпретировать как числовые, то тип значения у свойства будет числовой.
        Если хоть одно значение не приводится к числу, то тип значения определяется как строковый.

        В заголовках запроса так же необходимо указать ID приложения с контекстами которого будет выполнятся работа.
      security: [TalentOAuth: []]
      tags: [admin]
      requestBody:
        required: true
        description: Таблица контекстов для импорта.
        content:
          text/tsv:
            schema:
              type: string
              format: binary
          text/csv:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Успешно выполнена запись
        '400':
          $ref: '#/components/responses/Error'
          description: Ошибка чтения данных в соответствии с форматом запроса
        '403':
          $ref: '#/components/responses/Error'
          description: Пользователь не является администратором сервиса
        '422':
          description: Переданы невалидные данные
          content:
            application/json:
              schema:
                type: array
                description: Строки с ошибками валидации.
                items:
                  type: object
                  required:
                    - index
                    - error
                    - row
                  properties:
                    index:
                      type: integer
                      description: Индекс строки в таблице за исключением строки заголовка.
                    row:
                      type: object
                      description: Данные импортируемые строкой таблицы.
                      additionalProperties:
                        type: string
                    errors:
                      type: array
                      description: Ошибки валидации строки.
                      items:
                        type: string
                        description: Текст ошибки.
      parameters:
        - name: X-Application
          in: header
          required: true
          description: ID приложения, для которого импортируются контексты.
          schema:
            type: string
            format: uuid
  /contexts/{context_id}/tradition-id:
    get:
      operationId: ContextTraditionID
      summary: Традиция контекста
      security: []
      tags: [service]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: integer
                format: int32
                description: ID традиции
        '404':
          description: Контекст не найден
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    parameters:
      - name: context_id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ContextID'
components:
  schemas:
    Activity:
      type: object
      description: Сохраненная игровая активность.
      required:
        - id
        - created_at
        - context_id
        - player_id
        - app_version
        - scores
        - artefact_id
        - quarantine
      properties:
        id:
          $ref: '#/components/schemas/ActivityID'
        created_at:
          $ref: '#/components/schemas/ActivityCreatedAt'
        context_id:
          $ref: '#/components/schemas/ContextID'
        player_id:
          $ref: '#/components/schemas/PlayerID'
        app_version:
          $ref: '#/components/schemas/ActivityAppVersion'
        scores:
          $ref: '#/components/schemas/ActivityScores'
        artefact_id:
          allOf:
            - $ref: '#/components/schemas/ArtefactID'
            - nullable: true
        quarantine:
          type: string
          nullable: true
          enum:
            - missing_artefact
            - invalid_artefact
    ActivityID:
      type: string
      format: uuid
      description: Идентификатор активности.
    ActivityScores:
      type: number
      format: float64
      nullable: true
      description: Балл эффективности активности.
    ActivityAppVersion:
      type: string
      description: Версия приложения, в которой была произведена активность.
    ActivityCreatedAt:
      type: string
      format: date-time
      description: Дата записи активности.
    ActivityWrite:
      type: object
      description: Записываемая игровая активность.
      required:
        - app_version
        - context_id
      properties:
        app_version:
          $ref: '#/components/schemas/ActivityAppVersion'
        context_id:
          $ref: '#/components/schemas/ContextID'
        artefact_id:
          $ref: '#/components/schemas/ArtefactID'
        metrics:
          type: object
          minProperties: 1
          maxProperties: 15
          additionalProperties:
            type: number
            format: float64
    ActivityWriteList:
      type: array
      minItems: 1
      maxItems: 20
      items:
        $ref: '#/components/schemas/ActivityWrite'
    ActivityWriteObject:
      type: object
      required:
        - activities
      properties:
        activities:
          $ref: '#/components/schemas/ActivityWriteList'
        artefacts:
          type: array
          maxItems: 20
          items:
            type: object
            required:
              - id
              - content_type
              - artefact_type_id
              - checksum
            properties:
              id:
                type: string
                format: uuid
                description: ID артефакта, по которому на него ссылаются активности, переданные в том же запросе.
              content_type:
                type: string
                description: MIME-тип артефакта.
              artefact_type_id:
                type: integer
                format: int32
                description: ID типа артефакта из [справочника](#operation/ArtefactTypesList).
              checksum:
                type: string
                description: SHA-1 контрольная сумма
    ActivitiesCreateList:
      type: array
      items:
        type: object
        required:
          - id
          - scores
        properties:
          id:
            $ref: '#/components/schemas/ActivityID'
          scores:
            $ref: '#/components/schemas/ActivityScores'
    ActivitiesCreateObject:
      type: object
      required:
        - activities
        - artefacts
      properties:
        activities:
          $ref: '#/components/schemas/ActivitiesCreateList'
        artefacts:
          type: array
          items:
            type: object
            required:
              - id
              - upload_url
            properties:
              id:
                $ref: '#/components/schemas/ArtefactID'
              upload_url:
                type: string
                format: url
                description: Временный URL для загрузки данных артефакта методом PUT
    ActivityMetrics:
      type: object
      description: Метрики активности.
      additionalProperties:
        type: number
        format: float64
    ActivitiesScores:
      type: number
      format: float64
      description: Балл эффективности.
    ArtefactID:
      type: string
      format: uuid
      description: Идентификатор артефакта.
    Context:
      type: object
      description: Контекст активностей
      required:
        - id
        - application_id
        - tradition_id
        - activity_type_id
        - description
      properties:
        id:
          $ref: '#/components/schemas/ContextID'
        application_id:
          type: string
          format: uuid
        tradition_id:
          type: integer
          format: int32
        activity_type_id:
          type: integer
          format: int32
        description:
          type: string
    ContextID:
      type: string
      format: uuid
      description: Идентификатор контекста активности.
    Error:
      type: object
      required:
        - error_message
      properties:
        error_message:
          type: string
          description: Описание ошибки
    PlayerID:
      type: string
      format: uuid
      description: Идентификатор игрока.
  responses:
    Error:
      description: Ошибка
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  headers:
    X-Count:
      required: true
      description: Общее кол-во объектов, входящих в выборку без учета пагинации.
      schema:
        type: integer
        format: int64
  securitySchemes:
    BerlogaJWT:
      type: apiKey
      name: Authorization
      in: header
      description: JWT, полученный эндпоинтом [issue-token](/berloga-idp/docs/#operation/IssueToken).
    TalentOAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT, полученный OAuth провайдером платформы Талант.
    ServiceKey:
      type: apiKey
      name: X-Service-Key
      in: header
