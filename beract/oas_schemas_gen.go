// Code generated by ogen, DO NOT EDIT.

package beract

import (
	"io"
	"time"

	"github.com/go-faster/errors"
	"github.com/google/uuid"
)

// ActivitiesCreateCreated represents sum type.
type ActivitiesCreateCreated struct {
	Type                   ActivitiesCreateCreatedType // switch on this field
	ActivitiesCreateList   ActivitiesCreateList
	ActivitiesCreateObject ActivitiesCreateObject
}

// ActivitiesCreateCreatedType is oneOf type of ActivitiesCreateCreated.
type ActivitiesCreateCreatedType string

// Possible values for ActivitiesCreateCreatedType.
const (
	ActivitiesCreateListActivitiesCreateCreated   ActivitiesCreateCreatedType = "ActivitiesCreateList"
	ActivitiesCreateObjectActivitiesCreateCreated ActivitiesCreateCreatedType = "ActivitiesCreateObject"
)

// IsActivitiesCreateList reports whether ActivitiesCreateCreated is ActivitiesCreateList.
func (s ActivitiesCreateCreated) IsActivitiesCreateList() bool {
	return s.Type == ActivitiesCreateListActivitiesCreateCreated
}

// IsActivitiesCreateObject reports whether ActivitiesCreateCreated is ActivitiesCreateObject.
func (s ActivitiesCreateCreated) IsActivitiesCreateObject() bool {
	return s.Type == ActivitiesCreateObjectActivitiesCreateCreated
}

// SetActivitiesCreateList sets ActivitiesCreateCreated to ActivitiesCreateList.
func (s *ActivitiesCreateCreated) SetActivitiesCreateList(v ActivitiesCreateList) {
	s.Type = ActivitiesCreateListActivitiesCreateCreated
	s.ActivitiesCreateList = v
}

// GetActivitiesCreateList returns ActivitiesCreateList and true boolean if ActivitiesCreateCreated is ActivitiesCreateList.
func (s ActivitiesCreateCreated) GetActivitiesCreateList() (v ActivitiesCreateList, ok bool) {
	if !s.IsActivitiesCreateList() {
		return v, false
	}
	return s.ActivitiesCreateList, true
}

// NewActivitiesCreateListActivitiesCreateCreated returns new ActivitiesCreateCreated from ActivitiesCreateList.
func NewActivitiesCreateListActivitiesCreateCreated(v ActivitiesCreateList) ActivitiesCreateCreated {
	var s ActivitiesCreateCreated
	s.SetActivitiesCreateList(v)
	return s
}

// SetActivitiesCreateObject sets ActivitiesCreateCreated to ActivitiesCreateObject.
func (s *ActivitiesCreateCreated) SetActivitiesCreateObject(v ActivitiesCreateObject) {
	s.Type = ActivitiesCreateObjectActivitiesCreateCreated
	s.ActivitiesCreateObject = v
}

// GetActivitiesCreateObject returns ActivitiesCreateObject and true boolean if ActivitiesCreateCreated is ActivitiesCreateObject.
func (s ActivitiesCreateCreated) GetActivitiesCreateObject() (v ActivitiesCreateObject, ok bool) {
	if !s.IsActivitiesCreateObject() {
		return v, false
	}
	return s.ActivitiesCreateObject, true
}

// NewActivitiesCreateObjectActivitiesCreateCreated returns new ActivitiesCreateCreated from ActivitiesCreateObject.
func NewActivitiesCreateObjectActivitiesCreateCreated(v ActivitiesCreateObject) ActivitiesCreateCreated {
	var s ActivitiesCreateCreated
	s.SetActivitiesCreateObject(v)
	return s
}

func (*ActivitiesCreateCreated) activitiesCreateRes() {}

type ActivitiesCreateList []ActivitiesCreateListItem

type ActivitiesCreateListItem struct {
	ID     ActivityID        `json:"id"`
	Scores NilActivityScores `json:"scores"`
}

// GetID returns the value of ID.
func (s *ActivitiesCreateListItem) GetID() ActivityID {
	return s.ID
}

// GetScores returns the value of Scores.
func (s *ActivitiesCreateListItem) GetScores() NilActivityScores {
	return s.Scores
}

// SetID sets the value of ID.
func (s *ActivitiesCreateListItem) SetID(val ActivityID) {
	s.ID = val
}

// SetScores sets the value of Scores.
func (s *ActivitiesCreateListItem) SetScores(val NilActivityScores) {
	s.Scores = val
}

// Ref: #/components/schemas/ActivitiesCreateObject
type ActivitiesCreateObject struct {
	Activities ActivitiesCreateList                  `json:"activities"`
	Artefacts  []ActivitiesCreateObjectArtefactsItem `json:"artefacts"`
}

// GetActivities returns the value of Activities.
func (s *ActivitiesCreateObject) GetActivities() ActivitiesCreateList {
	return s.Activities
}

// GetArtefacts returns the value of Artefacts.
func (s *ActivitiesCreateObject) GetArtefacts() []ActivitiesCreateObjectArtefactsItem {
	return s.Artefacts
}

// SetActivities sets the value of Activities.
func (s *ActivitiesCreateObject) SetActivities(val ActivitiesCreateList) {
	s.Activities = val
}

// SetArtefacts sets the value of Artefacts.
func (s *ActivitiesCreateObject) SetArtefacts(val []ActivitiesCreateObjectArtefactsItem) {
	s.Artefacts = val
}

type ActivitiesCreateObjectArtefactsItem struct {
	ID ArtefactID `json:"id"`
	// Временный URL для загрузки данных артефакта методом PUT.
	UploadURL string `json:"upload_url"`
}

// GetID returns the value of ID.
func (s *ActivitiesCreateObjectArtefactsItem) GetID() ArtefactID {
	return s.ID
}

// GetUploadURL returns the value of UploadURL.
func (s *ActivitiesCreateObjectArtefactsItem) GetUploadURL() string {
	return s.UploadURL
}

// SetID sets the value of ID.
func (s *ActivitiesCreateObjectArtefactsItem) SetID(val ArtefactID) {
	s.ID = val
}

// SetUploadURL sets the value of UploadURL.
func (s *ActivitiesCreateObjectArtefactsItem) SetUploadURL(val string) {
	s.UploadURL = val
}

// ActivitiesCreateReq represents sum type.
type ActivitiesCreateReq struct {
	Type                ActivitiesCreateReqType // switch on this field
	ActivityWriteList   ActivityWriteList
	ActivityWriteObject ActivityWriteObject
}

// ActivitiesCreateReqType is oneOf type of ActivitiesCreateReq.
type ActivitiesCreateReqType string

// Possible values for ActivitiesCreateReqType.
const (
	ActivityWriteListActivitiesCreateReq   ActivitiesCreateReqType = "ActivityWriteList"
	ActivityWriteObjectActivitiesCreateReq ActivitiesCreateReqType = "ActivityWriteObject"
)

// IsActivityWriteList reports whether ActivitiesCreateReq is ActivityWriteList.
func (s ActivitiesCreateReq) IsActivityWriteList() bool {
	return s.Type == ActivityWriteListActivitiesCreateReq
}

// IsActivityWriteObject reports whether ActivitiesCreateReq is ActivityWriteObject.
func (s ActivitiesCreateReq) IsActivityWriteObject() bool {
	return s.Type == ActivityWriteObjectActivitiesCreateReq
}

// SetActivityWriteList sets ActivitiesCreateReq to ActivityWriteList.
func (s *ActivitiesCreateReq) SetActivityWriteList(v ActivityWriteList) {
	s.Type = ActivityWriteListActivitiesCreateReq
	s.ActivityWriteList = v
}

// GetActivityWriteList returns ActivityWriteList and true boolean if ActivitiesCreateReq is ActivityWriteList.
func (s ActivitiesCreateReq) GetActivityWriteList() (v ActivityWriteList, ok bool) {
	if !s.IsActivityWriteList() {
		return v, false
	}
	return s.ActivityWriteList, true
}

// NewActivityWriteListActivitiesCreateReq returns new ActivitiesCreateReq from ActivityWriteList.
func NewActivityWriteListActivitiesCreateReq(v ActivityWriteList) ActivitiesCreateReq {
	var s ActivitiesCreateReq
	s.SetActivityWriteList(v)
	return s
}

// SetActivityWriteObject sets ActivitiesCreateReq to ActivityWriteObject.
func (s *ActivitiesCreateReq) SetActivityWriteObject(v ActivityWriteObject) {
	s.Type = ActivityWriteObjectActivitiesCreateReq
	s.ActivityWriteObject = v
}

// GetActivityWriteObject returns ActivityWriteObject and true boolean if ActivitiesCreateReq is ActivityWriteObject.
func (s ActivitiesCreateReq) GetActivityWriteObject() (v ActivityWriteObject, ok bool) {
	if !s.IsActivityWriteObject() {
		return v, false
	}
	return s.ActivityWriteObject, true
}

// NewActivityWriteObjectActivitiesCreateReq returns new ActivitiesCreateReq from ActivityWriteObject.
func NewActivityWriteObjectActivitiesCreateReq(v ActivityWriteObject) ActivitiesCreateReq {
	var s ActivitiesCreateReq
	s.SetActivityWriteObject(v)
	return s
}

type ActivitiesScores float64

func (*ActivitiesScores) activitiesScoresRes() {}

type ActivitiesScoresByTraditionsOKApplicationJSON []ActivitiesScoresByTraditionsOKItem

func (*ActivitiesScoresByTraditionsOKApplicationJSON) activitiesScoresByTraditionsRes() {}

type ActivitiesScoresByTraditionsOKItem struct {
	// ID традиции.
	TraditionID int32            `json:"tradition_id"`
	Scores      ActivitiesScores `json:"scores"`
}

// GetTraditionID returns the value of TraditionID.
func (s *ActivitiesScoresByTraditionsOKItem) GetTraditionID() int32 {
	return s.TraditionID
}

// GetScores returns the value of Scores.
func (s *ActivitiesScoresByTraditionsOKItem) GetScores() ActivitiesScores {
	return s.Scores
}

// SetTraditionID sets the value of TraditionID.
func (s *ActivitiesScoresByTraditionsOKItem) SetTraditionID(val int32) {
	s.TraditionID = val
}

// SetScores sets the value of Scores.
func (s *ActivitiesScoresByTraditionsOKItem) SetScores(val ActivitiesScores) {
	s.Scores = val
}

type ActivitiesScoresForbidden Error

func (*ActivitiesScoresForbidden) activitiesScoresRes() {}

type ActivitiesScoresUnprocessableEntity Error

func (*ActivitiesScoresUnprocessableEntity) activitiesScoresRes() {}

// Сохраненная игровая активность.
// Ref: #/components/schemas/Activity
type Activity struct {
	ID ActivityID `json:"id"`
	// Дата записи активности.
	CreatedAt  time.Time             `json:"created_at"`
	ContextID  ContextID             `json:"context_id"`
	PlayerID   PlayerID              `json:"player_id"`
	AppVersion ActivityAppVersion    `json:"app_version"`
	Scores     NilActivityScores     `json:"scores"`
	ArtefactID NilUUID               `json:"artefact_id"`
	Quarantine NilActivityQuarantine `json:"quarantine"`
}

// GetID returns the value of ID.
func (s *Activity) GetID() ActivityID {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *Activity) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetContextID returns the value of ContextID.
func (s *Activity) GetContextID() ContextID {
	return s.ContextID
}

// GetPlayerID returns the value of PlayerID.
func (s *Activity) GetPlayerID() PlayerID {
	return s.PlayerID
}

// GetAppVersion returns the value of AppVersion.
func (s *Activity) GetAppVersion() ActivityAppVersion {
	return s.AppVersion
}

// GetScores returns the value of Scores.
func (s *Activity) GetScores() NilActivityScores {
	return s.Scores
}

// GetArtefactID returns the value of ArtefactID.
func (s *Activity) GetArtefactID() NilUUID {
	return s.ArtefactID
}

// GetQuarantine returns the value of Quarantine.
func (s *Activity) GetQuarantine() NilActivityQuarantine {
	return s.Quarantine
}

// SetID sets the value of ID.
func (s *Activity) SetID(val ActivityID) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *Activity) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetContextID sets the value of ContextID.
func (s *Activity) SetContextID(val ContextID) {
	s.ContextID = val
}

// SetPlayerID sets the value of PlayerID.
func (s *Activity) SetPlayerID(val PlayerID) {
	s.PlayerID = val
}

// SetAppVersion sets the value of AppVersion.
func (s *Activity) SetAppVersion(val ActivityAppVersion) {
	s.AppVersion = val
}

// SetScores sets the value of Scores.
func (s *Activity) SetScores(val NilActivityScores) {
	s.Scores = val
}

// SetArtefactID sets the value of ArtefactID.
func (s *Activity) SetArtefactID(val NilUUID) {
	s.ArtefactID = val
}

// SetQuarantine sets the value of Quarantine.
func (s *Activity) SetQuarantine(val NilActivityQuarantine) {
	s.Quarantine = val
}

type ActivityAppVersion string

type ActivityID uuid.UUID

type ActivityQuarantine string

const (
	ActivityQuarantineMissingArtefact ActivityQuarantine = "missing_artefact"
	ActivityQuarantineInvalidArtefact ActivityQuarantine = "invalid_artefact"
)

// AllValues returns all ActivityQuarantine values.
func (ActivityQuarantine) AllValues() []ActivityQuarantine {
	return []ActivityQuarantine{
		ActivityQuarantineMissingArtefact,
		ActivityQuarantineInvalidArtefact,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ActivityQuarantine) MarshalText() ([]byte, error) {
	switch s {
	case ActivityQuarantineMissingArtefact:
		return []byte(s), nil
	case ActivityQuarantineInvalidArtefact:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ActivityQuarantine) UnmarshalText(data []byte) error {
	switch ActivityQuarantine(data) {
	case ActivityQuarantineMissingArtefact:
		*s = ActivityQuarantineMissingArtefact
		return nil
	case ActivityQuarantineInvalidArtefact:
		*s = ActivityQuarantineInvalidArtefact
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Merged schema.
type ActivityReadOK struct {
	ID ActivityID `json:"id"`
	// Дата записи активности.
	CreatedAt  time.Time                   `json:"created_at"`
	ContextID  ContextID                   `json:"context_id"`
	PlayerID   PlayerID                    `json:"player_id"`
	AppVersion ActivityAppVersion          `json:"app_version"`
	Scores     NilActivityScores           `json:"scores"`
	ArtefactID NilUUID                     `json:"artefact_id"`
	Quarantine NilActivityReadOKQuarantine `json:"quarantine"`
	// Свойства контекста активности.
	ContextProperties ActivityReadOKContextProperties `json:"context_properties"`
	// Метрики активности.
	Metrics ActivityReadOKMetrics `json:"metrics"`
}

// GetID returns the value of ID.
func (s *ActivityReadOK) GetID() ActivityID {
	return s.ID
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ActivityReadOK) GetCreatedAt() time.Time {
	return s.CreatedAt
}

// GetContextID returns the value of ContextID.
func (s *ActivityReadOK) GetContextID() ContextID {
	return s.ContextID
}

// GetPlayerID returns the value of PlayerID.
func (s *ActivityReadOK) GetPlayerID() PlayerID {
	return s.PlayerID
}

// GetAppVersion returns the value of AppVersion.
func (s *ActivityReadOK) GetAppVersion() ActivityAppVersion {
	return s.AppVersion
}

// GetScores returns the value of Scores.
func (s *ActivityReadOK) GetScores() NilActivityScores {
	return s.Scores
}

// GetArtefactID returns the value of ArtefactID.
func (s *ActivityReadOK) GetArtefactID() NilUUID {
	return s.ArtefactID
}

// GetQuarantine returns the value of Quarantine.
func (s *ActivityReadOK) GetQuarantine() NilActivityReadOKQuarantine {
	return s.Quarantine
}

// GetContextProperties returns the value of ContextProperties.
func (s *ActivityReadOK) GetContextProperties() ActivityReadOKContextProperties {
	return s.ContextProperties
}

// GetMetrics returns the value of Metrics.
func (s *ActivityReadOK) GetMetrics() ActivityReadOKMetrics {
	return s.Metrics
}

// SetID sets the value of ID.
func (s *ActivityReadOK) SetID(val ActivityID) {
	s.ID = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ActivityReadOK) SetCreatedAt(val time.Time) {
	s.CreatedAt = val
}

// SetContextID sets the value of ContextID.
func (s *ActivityReadOK) SetContextID(val ContextID) {
	s.ContextID = val
}

// SetPlayerID sets the value of PlayerID.
func (s *ActivityReadOK) SetPlayerID(val PlayerID) {
	s.PlayerID = val
}

// SetAppVersion sets the value of AppVersion.
func (s *ActivityReadOK) SetAppVersion(val ActivityAppVersion) {
	s.AppVersion = val
}

// SetScores sets the value of Scores.
func (s *ActivityReadOK) SetScores(val NilActivityScores) {
	s.Scores = val
}

// SetArtefactID sets the value of ArtefactID.
func (s *ActivityReadOK) SetArtefactID(val NilUUID) {
	s.ArtefactID = val
}

// SetQuarantine sets the value of Quarantine.
func (s *ActivityReadOK) SetQuarantine(val NilActivityReadOKQuarantine) {
	s.Quarantine = val
}

// SetContextProperties sets the value of ContextProperties.
func (s *ActivityReadOK) SetContextProperties(val ActivityReadOKContextProperties) {
	s.ContextProperties = val
}

// SetMetrics sets the value of Metrics.
func (s *ActivityReadOK) SetMetrics(val ActivityReadOKMetrics) {
	s.Metrics = val
}

func (*ActivityReadOK) activityReadRes() {}

// Свойства контекста активности.
type ActivityReadOKContextProperties map[string]ActivityReadOKContextPropertiesItem

func (s *ActivityReadOKContextProperties) init() ActivityReadOKContextProperties {
	m := *s
	if m == nil {
		m = map[string]ActivityReadOKContextPropertiesItem{}
		*s = m
	}
	return m
}

type ActivityReadOKContextPropertiesItem struct {
	ValueString NilString  `json:"value_string"`
	ValueNumber NilFloat64 `json:"value_number"`
}

// GetValueString returns the value of ValueString.
func (s *ActivityReadOKContextPropertiesItem) GetValueString() NilString {
	return s.ValueString
}

// GetValueNumber returns the value of ValueNumber.
func (s *ActivityReadOKContextPropertiesItem) GetValueNumber() NilFloat64 {
	return s.ValueNumber
}

// SetValueString sets the value of ValueString.
func (s *ActivityReadOKContextPropertiesItem) SetValueString(val NilString) {
	s.ValueString = val
}

// SetValueNumber sets the value of ValueNumber.
func (s *ActivityReadOKContextPropertiesItem) SetValueNumber(val NilFloat64) {
	s.ValueNumber = val
}

// Метрики активности.
type ActivityReadOKMetrics map[string]float64

func (s *ActivityReadOKMetrics) init() ActivityReadOKMetrics {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

type ActivityReadOKQuarantine string

const (
	ActivityReadOKQuarantineMissingArtefact ActivityReadOKQuarantine = "missing_artefact"
	ActivityReadOKQuarantineInvalidArtefact ActivityReadOKQuarantine = "invalid_artefact"
)

// AllValues returns all ActivityReadOKQuarantine values.
func (ActivityReadOKQuarantine) AllValues() []ActivityReadOKQuarantine {
	return []ActivityReadOKQuarantine{
		ActivityReadOKQuarantineMissingArtefact,
		ActivityReadOKQuarantineInvalidArtefact,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ActivityReadOKQuarantine) MarshalText() ([]byte, error) {
	switch s {
	case ActivityReadOKQuarantineMissingArtefact:
		return []byte(s), nil
	case ActivityReadOKQuarantineInvalidArtefact:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ActivityReadOKQuarantine) UnmarshalText(data []byte) error {
	switch ActivityReadOKQuarantine(data) {
	case ActivityReadOKQuarantineMissingArtefact:
		*s = ActivityReadOKQuarantineMissingArtefact
		return nil
	case ActivityReadOKQuarantineInvalidArtefact:
		*s = ActivityReadOKQuarantineInvalidArtefact
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ActivityScores float64

// Записываемая игровая активность.
// Ref: #/components/schemas/ActivityWrite
type ActivityWrite struct {
	AppVersion ActivityAppVersion      `json:"app_version"`
	ContextID  ContextID               `json:"context_id"`
	ArtefactID OptArtefactID           `json:"artefact_id"`
	Metrics    OptActivityWriteMetrics `json:"metrics"`
}

// GetAppVersion returns the value of AppVersion.
func (s *ActivityWrite) GetAppVersion() ActivityAppVersion {
	return s.AppVersion
}

// GetContextID returns the value of ContextID.
func (s *ActivityWrite) GetContextID() ContextID {
	return s.ContextID
}

// GetArtefactID returns the value of ArtefactID.
func (s *ActivityWrite) GetArtefactID() OptArtefactID {
	return s.ArtefactID
}

// GetMetrics returns the value of Metrics.
func (s *ActivityWrite) GetMetrics() OptActivityWriteMetrics {
	return s.Metrics
}

// SetAppVersion sets the value of AppVersion.
func (s *ActivityWrite) SetAppVersion(val ActivityAppVersion) {
	s.AppVersion = val
}

// SetContextID sets the value of ContextID.
func (s *ActivityWrite) SetContextID(val ContextID) {
	s.ContextID = val
}

// SetArtefactID sets the value of ArtefactID.
func (s *ActivityWrite) SetArtefactID(val OptArtefactID) {
	s.ArtefactID = val
}

// SetMetrics sets the value of Metrics.
func (s *ActivityWrite) SetMetrics(val OptActivityWriteMetrics) {
	s.Metrics = val
}

type ActivityWriteList []ActivityWrite

type ActivityWriteMetrics map[string]float64

func (s *ActivityWriteMetrics) init() ActivityWriteMetrics {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/ActivityWriteObject
type ActivityWriteObject struct {
	Activities ActivityWriteList                  `json:"activities"`
	Artefacts  []ActivityWriteObjectArtefactsItem `json:"artefacts"`
}

// GetActivities returns the value of Activities.
func (s *ActivityWriteObject) GetActivities() ActivityWriteList {
	return s.Activities
}

// GetArtefacts returns the value of Artefacts.
func (s *ActivityWriteObject) GetArtefacts() []ActivityWriteObjectArtefactsItem {
	return s.Artefacts
}

// SetActivities sets the value of Activities.
func (s *ActivityWriteObject) SetActivities(val ActivityWriteList) {
	s.Activities = val
}

// SetArtefacts sets the value of Artefacts.
func (s *ActivityWriteObject) SetArtefacts(val []ActivityWriteObjectArtefactsItem) {
	s.Artefacts = val
}

type ActivityWriteObjectArtefactsItem struct {
	// ID артефакта, по которому на него ссылаются активности,
	//  переданные в том же запросе.
	ID uuid.UUID `json:"id"`
	// MIME-тип артефакта.
	ContentType string `json:"content_type"`
	// ID типа артефакта из [справочника](#operation/ArtefactTypesList).
	ArtefactTypeID int32 `json:"artefact_type_id"`
	// SHA-1 контрольная сумма.
	Checksum string `json:"checksum"`
}

// GetID returns the value of ID.
func (s *ActivityWriteObjectArtefactsItem) GetID() uuid.UUID {
	return s.ID
}

// GetContentType returns the value of ContentType.
func (s *ActivityWriteObjectArtefactsItem) GetContentType() string {
	return s.ContentType
}

// GetArtefactTypeID returns the value of ArtefactTypeID.
func (s *ActivityWriteObjectArtefactsItem) GetArtefactTypeID() int32 {
	return s.ArtefactTypeID
}

// GetChecksum returns the value of Checksum.
func (s *ActivityWriteObjectArtefactsItem) GetChecksum() string {
	return s.Checksum
}

// SetID sets the value of ID.
func (s *ActivityWriteObjectArtefactsItem) SetID(val uuid.UUID) {
	s.ID = val
}

// SetContentType sets the value of ContentType.
func (s *ActivityWriteObjectArtefactsItem) SetContentType(val string) {
	s.ContentType = val
}

// SetArtefactTypeID sets the value of ArtefactTypeID.
func (s *ActivityWriteObjectArtefactsItem) SetArtefactTypeID(val int32) {
	s.ArtefactTypeID = val
}

// SetChecksum sets the value of Checksum.
func (s *ActivityWriteObjectArtefactsItem) SetChecksum(val string) {
	s.Checksum = val
}

type ArtefactID uuid.UUID

type ArtefactSetUploadedNotFound Error

func (*ArtefactSetUploadedNotFound) artefactSetUploadedRes() {}

// ArtefactSetUploadedOK is response for ArtefactSetUploaded operation.
type ArtefactSetUploadedOK struct{}

func (*ArtefactSetUploadedOK) artefactSetUploadedRes() {}

type ArtefactSetUploadedUnprocessableEntity Error

func (*ArtefactSetUploadedUnprocessableEntity) artefactSetUploadedRes() {}

type ArtefactTypesListOKItem struct {
	// Идентификатор типа артефактов.
	ID int32 `json:"id"`
	// Название типа артефактов.
	Name string `json:"name"`
}

// GetID returns the value of ID.
func (s *ArtefactTypesListOKItem) GetID() int32 {
	return s.ID
}

// GetName returns the value of Name.
func (s *ArtefactTypesListOKItem) GetName() string {
	return s.Name
}

// SetID sets the value of ID.
func (s *ArtefactTypesListOKItem) SetID(val int32) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ArtefactTypesListOKItem) SetName(val string) {
	s.Name = val
}

type ArtefactUploadURLNotFound Error

func (*ArtefactUploadURLNotFound) artefactUploadURLRes() {}

type ArtefactUploadURLOKApplicationJSON string

func (*ArtefactUploadURLOKApplicationJSON) artefactUploadURLRes() {}

type ArtefactUploadURLUnprocessableEntity Error

func (*ArtefactUploadURLUnprocessableEntity) artefactUploadURLRes() {}

type ArtefactsCreateCreatedApplicationJSON uuid.UUID

func (*ArtefactsCreateCreatedApplicationJSON) artefactsCreateRes() {}

type ArtefactsCreateReq struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s ArtefactsCreateReq) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// ArtefactsCreateReqWithContentType wraps ArtefactsCreateReq with Content-Type.
type ArtefactsCreateReqWithContentType struct {
	ContentType string
	Content     ArtefactsCreateReq
}

// GetContentType returns the value of ContentType.
func (s *ArtefactsCreateReqWithContentType) GetContentType() string {
	return s.ContentType
}

// GetContent returns the value of Content.
func (s *ArtefactsCreateReqWithContentType) GetContent() ArtefactsCreateReq {
	return s.Content
}

// SetContentType sets the value of ContentType.
func (s *ArtefactsCreateReqWithContentType) SetContentType(val string) {
	s.ContentType = val
}

// SetContent sets the value of Content.
func (s *ArtefactsCreateReqWithContentType) SetContent(val ArtefactsCreateReq) {
	s.Content = val
}

type BerlogaJWT struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *BerlogaJWT) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *BerlogaJWT) SetAPIKey(val string) {
	s.APIKey = val
}

type ContextID uuid.UUID

type ContextTraditionIDOKApplicationJSON int32

func (*ContextTraditionIDOKApplicationJSON) contextTraditionIDRes() {}

// Ref: #/components/schemas/Error
type Error struct {
	// Описание ошибки.
	ErrorMessage string `json:"error_message"`
}

// GetErrorMessage returns the value of ErrorMessage.
func (s *Error) GetErrorMessage() string {
	return s.ErrorMessage
}

// SetErrorMessage sets the value of ErrorMessage.
func (s *Error) SetErrorMessage(val string) {
	s.ErrorMessage = val
}

func (*Error) activitiesCreateRes()             {}
func (*Error) activitiesScoresByTraditionsRes() {}
func (*Error) activityReadRes()                 {}
func (*Error) artefactsCreateRes()              {}
func (*Error) contextTraditionIDRes()           {}

// NewNilActivityQuarantine returns new NilActivityQuarantine with value set to v.
func NewNilActivityQuarantine(v ActivityQuarantine) NilActivityQuarantine {
	return NilActivityQuarantine{
		Value: v,
	}
}

// NilActivityQuarantine is nullable ActivityQuarantine.
type NilActivityQuarantine struct {
	Value ActivityQuarantine
	Null  bool
}

// SetTo sets value to v.
func (o *NilActivityQuarantine) SetTo(v ActivityQuarantine) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilActivityQuarantine) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilActivityQuarantine) SetToNull() {
	o.Null = true
	var v ActivityQuarantine
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilActivityQuarantine) Get() (v ActivityQuarantine, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilActivityQuarantine) Or(d ActivityQuarantine) ActivityQuarantine {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilActivityReadOKQuarantine returns new NilActivityReadOKQuarantine with value set to v.
func NewNilActivityReadOKQuarantine(v ActivityReadOKQuarantine) NilActivityReadOKQuarantine {
	return NilActivityReadOKQuarantine{
		Value: v,
	}
}

// NilActivityReadOKQuarantine is nullable ActivityReadOKQuarantine.
type NilActivityReadOKQuarantine struct {
	Value ActivityReadOKQuarantine
	Null  bool
}

// SetTo sets value to v.
func (o *NilActivityReadOKQuarantine) SetTo(v ActivityReadOKQuarantine) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilActivityReadOKQuarantine) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilActivityReadOKQuarantine) SetToNull() {
	o.Null = true
	var v ActivityReadOKQuarantine
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilActivityReadOKQuarantine) Get() (v ActivityReadOKQuarantine, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilActivityReadOKQuarantine) Or(d ActivityReadOKQuarantine) ActivityReadOKQuarantine {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilActivityScores returns new NilActivityScores with value set to v.
func NewNilActivityScores(v ActivityScores) NilActivityScores {
	return NilActivityScores{
		Value: v,
	}
}

// NilActivityScores is nullable ActivityScores.
type NilActivityScores struct {
	Value ActivityScores
	Null  bool
}

// SetTo sets value to v.
func (o *NilActivityScores) SetTo(v ActivityScores) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilActivityScores) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilActivityScores) SetToNull() {
	o.Null = true
	var v ActivityScores
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilActivityScores) Get() (v ActivityScores, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilActivityScores) Or(d ActivityScores) ActivityScores {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilFloat64 returns new NilFloat64 with value set to v.
func NewNilFloat64(v float64) NilFloat64 {
	return NilFloat64{
		Value: v,
	}
}

// NilFloat64 is nullable float64.
type NilFloat64 struct {
	Value float64
	Null  bool
}

// SetTo sets value to v.
func (o *NilFloat64) SetTo(v float64) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilFloat64) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilFloat64) SetToNull() {
	o.Null = true
	var v float64
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilFloat64) Get() (v float64, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilString returns new NilString with value set to v.
func NewNilString(v string) NilString {
	return NilString{
		Value: v,
	}
}

// NilString is nullable string.
type NilString struct {
	Value string
	Null  bool
}

// SetTo sets value to v.
func (o *NilString) SetTo(v string) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilString) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilString) SetToNull() {
	o.Null = true
	var v string
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilString) Get() (v string, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewNilUUID returns new NilUUID with value set to v.
func NewNilUUID(v uuid.UUID) NilUUID {
	return NilUUID{
		Value: v,
	}
}

// NilUUID is nullable uuid.UUID.
type NilUUID struct {
	Value uuid.UUID
	Null  bool
}

// SetTo sets value to v.
func (o *NilUUID) SetTo(v uuid.UUID) {
	o.Null = false
	o.Value = v
}

// IsSet returns true if value is Null.
func (o NilUUID) IsNull() bool { return o.Null }

// SetNull sets value to null.
func (o *NilUUID) SetToNull() {
	o.Null = true
	var v uuid.UUID
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o NilUUID) Get() (v uuid.UUID, ok bool) {
	if o.Null {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o NilUUID) Or(d uuid.UUID) uuid.UUID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptActivityWriteMetrics returns new OptActivityWriteMetrics with value set to v.
func NewOptActivityWriteMetrics(v ActivityWriteMetrics) OptActivityWriteMetrics {
	return OptActivityWriteMetrics{
		Value: v,
		Set:   true,
	}
}

// OptActivityWriteMetrics is optional ActivityWriteMetrics.
type OptActivityWriteMetrics struct {
	Value ActivityWriteMetrics
	Set   bool
}

// IsSet returns true if OptActivityWriteMetrics was set.
func (o OptActivityWriteMetrics) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptActivityWriteMetrics) Reset() {
	var v ActivityWriteMetrics
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptActivityWriteMetrics) SetTo(v ActivityWriteMetrics) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptActivityWriteMetrics) Get() (v ActivityWriteMetrics, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptActivityWriteMetrics) Or(d ActivityWriteMetrics) ActivityWriteMetrics {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptArtefactID returns new OptArtefactID with value set to v.
func NewOptArtefactID(v ArtefactID) OptArtefactID {
	return OptArtefactID{
		Value: v,
		Set:   true,
	}
}

// OptArtefactID is optional ArtefactID.
type OptArtefactID struct {
	Value ArtefactID
	Set   bool
}

// IsSet returns true if OptArtefactID was set.
func (o OptArtefactID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptArtefactID) Reset() {
	var v ArtefactID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptArtefactID) SetTo(v ArtefactID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptArtefactID) Get() (v ArtefactID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptArtefactID) Or(d ArtefactID) ArtefactID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PlayerID uuid.UUID

type ServiceKey struct {
	APIKey string
}

// GetAPIKey returns the value of APIKey.
func (s *ServiceKey) GetAPIKey() string {
	return s.APIKey
}

// SetAPIKey sets the value of APIKey.
func (s *ServiceKey) SetAPIKey(val string) {
	s.APIKey = val
}
