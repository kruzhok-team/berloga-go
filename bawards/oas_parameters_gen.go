// Code generated by ogen, DO NOT EDIT.

package bawards

// AwardsListParams is parameters of AwardsList operation.
type AwardsListParams struct {
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
	// Фильтрация по ID традиции.
	TraditionID OptInt32
	// Фильтрация по ID инструмента.
	InstrumentID OptInt32
	// Порядок сортировки.
	OrderBy OptAwardsListOrderBy
	// Включить в ответ свойство `applications`.
	WithApplications OptBool
}

// ChallengesListParams is parameters of ChallengesList operation.
type ChallengesListParams struct {
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
}

// ComplexChallengeGoalCreateParams is parameters of ComplexChallengeGoalCreate operation.
type ComplexChallengeGoalCreateParams struct {
	ComplexchID int32
}

// ComplexChallengeGoalDeleteParams is parameters of ComplexChallengeGoalDelete operation.
type ComplexChallengeGoalDeleteParams struct {
	GoalID int32
}

// ComplexChallengeGoalReadParams is parameters of ComplexChallengeGoalRead operation.
type ComplexChallengeGoalReadParams struct {
	GoalID int32
}

// ComplexChallengeGoalUpdateParams is parameters of ComplexChallengeGoalUpdate operation.
type ComplexChallengeGoalUpdateParams struct {
	GoalID int32
}

// ComplexChallengeGoalsListParams is parameters of ComplexChallengeGoalsList operation.
type ComplexChallengeGoalsListParams struct {
	ComplexchID int32
}

// ComplexChallengePublicParams is parameters of ComplexChallengePublic operation.
type ComplexChallengePublicParams struct {
	ComplexchID int32
	// Устанавливаемое значение свойства `public`.
	Value bool
}

// ComplexChallengeReadParams is parameters of ComplexChallengeRead operation.
type ComplexChallengeReadParams struct {
	// Вернуть объекты со свойством `goals`.
	// Доступно только при наличии административных прав.
	WithGoals   OptBool
	ComplexchID int32
}

// ComplexChallengeUpdateParams is parameters of ComplexChallengeUpdate operation.
type ComplexChallengeUpdateParams struct {
	ComplexchID int32
}

// ComplexChallengeValidateParams is parameters of ComplexChallengeValidate operation.
type ComplexChallengeValidateParams struct {
	ComplexchID int32
}

// ComplexChallengesListParams is parameters of ComplexChallengesList operation.
type ComplexChallengesListParams struct {
	// Пропуск объектов с идентификатором равном или менее
	// указанного.
	After OptInt32
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
	// Фильтр по статусу опубликованности.
	Public OptBool
}

// ComplexChallengesResultsListParams is parameters of ComplexChallengesResultsList operation.
type ComplexChallengesResultsListParams struct {
	// Пропуск объектов с идентификатором равном или менее
	// указанного.
	After OptInt64
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
	// Фильтрация по ID пользователя Таланта.
	UserID OptInt32
	// Порядок сортировки результатов.
	// Недоступно при использовании параметра `after`.
	OrderBy OptComplexChallengesResultsListOrderBy
}

// InstrumentReadParams is parameters of InstrumentRead operation.
type InstrumentReadParams struct {
	// Идентификатор инструмента в адресе.
	InstrumentID int32
}

// InstrumentUpdateParams is parameters of InstrumentUpdate operation.
type InstrumentUpdateParams struct {
	// Идентификатор инструмента в адресе.
	InstrumentID int32
}

// InstrumentsListParams is parameters of InstrumentsList operation.
type InstrumentsListParams struct {
	// Пропуск объектов с идентификатором равном или менее
	// указанного.
	After OptInt32
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
	// Фильтрация по признаку активности объектов выборки.
	// По умолчанию возвращаются только активные.
	IsActive OptInstrumentsListIsActive
	// Идентификаторы инструментов.
	ID []int32
	// Фильтрация по ID традиций.
	TID []int32
	// Фильтрация по ID компетенций.
	CID []int32
	// Фильтрация по названию инструмента.
	Name OptString
	// Очереднось выдачи.
	OrderBy OptInstrumentsListOrderBy
}

// PassedChallengesListParams is parameters of PassedChallengesList operation.
type PassedChallengesListParams struct {
	// Испытания пройденные игроками, объединенными
	// пользователем, привязанным к указанному игроку.
	// При отсутствии привязанного пользователя,
	// возвращаются испытания указанного игрока.
	PlayerID OptUUID
	// Испытания пройденные игроками указанного
	// пользователя.
	TalentID OptInt32
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
}

// TraditionInstrumentsListParams is parameters of TraditionInstrumentsList operation.
type TraditionInstrumentsListParams struct {
	// Идентификатор традиции в адресе.
	TraditionID int32
}

// TraditionReadParams is parameters of TraditionRead operation.
type TraditionReadParams struct {
	// Идентификатор традиции в адресе.
	TraditionID int32
}

// TraditionUpdateParams is parameters of TraditionUpdate operation.
type TraditionUpdateParams struct {
	// Идентификатор традиции в адресе.
	TraditionID int32
}

// TraditionsListParams is parameters of TraditionsList operation.
type TraditionsListParams struct {
	// Фильтрация по названию традиции.
	Name OptString
	// Фильтрация по признаку активности объектов выборки.
	// По умолчанию возвращаются только активные.
	IsActive OptTraditionsListIsActive
}

// UserAwardDisplayedParams is parameters of UserAwardDisplayed operation.
type UserAwardDisplayedParams struct {
	AwardID int32
}

// UserAwardsListParams is parameters of UserAwardsList operation.
type UserAwardsListParams struct {
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
}

// UserProgressListParams is parameters of UserProgressList operation.
type UserProgressListParams struct {
	// Кол-во объектов выборки для пропуска.
	Offset OptInt32
	// Максимум объектов возвращаемых в теле ответа.
	Limit OptInt32
	// Прогресс только по традициям.
	TraditionsOnly OptBool
	// Прогресс по инструментам традиции.
	TraditionInstruments OptInt32
	// Прогресс по определенным традициям.
	TraditionIds []int32
	// Прогресс по определенным инструментам.
	InstrumentIds []int32
	// Порядок сортировки.
	OrderBy OptUserProgressListOrderBy
}
